#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подобрать ключ аналитики учета бонусной программы.
// 
// Параметры:
//  ОбъектНастройки - ОпределяемыйТип.РА_ПодсистемаРасчетаБонусовПартнеров_ОбъектыНастройкиБонуснойПрограммы 
//  ПериодДействия - СправочникСсылка.РА_ПодсистемаРасчетаБонусовПартнеров_ПериодыДействияБонуса
//  УидБонуснойПрограммы - Строка
// 
// Возвращаемое значение:
//  СправочникСсылка.РА_ПодсистемаРасчетаБонусовПартнеров_КлючиАналитикиУчетаБонуснойПрограммы - Подобрать ключ аналитики учета бонусной программы
Функция ПодобратьКлючАналитикиУчетаБонуснойПрограммы(ОбъектНастройки, ПериодДействия, УидБонуснойПрограммы) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РА_КлючиАналитикиУчетаБонуснойПрограммы.Ссылка КАК КлючАналитикиУчетаБонуснойПрограммы
	|ИЗ
	|	Справочник.РА_ПодсистемаРасчетаБонусовПартнеров_КлючиАналитикиУчетаБонуснойПрограммы КАК РА_КлючиАналитикиУчетаБонуснойПрограммы
	|ГДЕ
	|	РА_КлючиАналитикиУчетаБонуснойПрограммы.ОбъектНастройки = &ОбъектНастройки
	|	И РА_КлючиАналитикиУчетаБонуснойПрограммы.ПериодДействия = &ПериодДействия
	|	И РА_КлючиАналитикиУчетаБонуснойПрограммы.УидБонуснойПрограммы = &УидБонуснойПрограммы";

	Запрос.УстановитьПараметр("ОбъектНастройки", ОбъектНастройки);
	Запрос.УстановитьПараметр("ПериодДействия", ПериодДействия);
	Запрос.УстановитьПараметр("УидБонуснойПрограммы", УидБонуснойПрограммы);

	РезультатЗапроса = Запрос.Выполнить().Выбрать();

	Если РезультатЗапроса.Следующий() Тогда
		Возврат РезультатЗапроса.КлючАналитикиУчетаБонуснойПрограммы;
	Иначе
		НовыйКлюч = СоздатьЭлемент();
		НовыйКлюч.ОбъектНастройки = ОбъектНастройки;
		НовыйКлюч.ПериодДействия = ПериодДействия;
		НовыйКлюч.УидБонуснойПрограммы = УидБонуснойПрограммы;
		НовыйКлюч.Записать();

		Возврат НовыйКлюч.Ссылка;
	КонецЕсли;

КонецФункции

// Проверить использование ключа аналитики учета бонусной программы.
// 
// Параметры:
//  УидБонуснойПрограммы - Строка
// 
// Возвращаемое значение:
//  Булево - Проверить использование ключа аналитики учета бонусной программы
Функция ПроверитьИспользованиеКлючаАналитикиУчетаБонуснойПрограммы(УидБонуснойПрограммы) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РА_БонусыПартнерам.АналитикаУчетаБонуснойПрограммы КАК АналитикаУчетаБонуснойПрограммы
	|ИЗ
	|	РегистрНакопления.РА_ПодсистемаРасчетаБонусовПартнеров_БонусыПартнерам КАК РА_БонусыПартнерам
	|ГДЕ
	|	РА_БонусыПартнерам.АналитикаУчетаБонуснойПрограммы.УидБонуснойПрограммы = &УидБонуснойПрограммы";

	Запрос.УстановитьПараметр("УидБонуснойПрограммы", УидБонуснойПрограммы);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат Истина;
	КонецЦикла;

	Возврат Ложь;

КонецФункции

// Пометить ключ аналитики учета бонусной программы на удаление.
// 
// Параметры:
//  УидБонуснойПрограммы - Строка
Процедура ПометитьКлючАналитикиУчетаБонуснойПрограммыНаУдаление(УидБонуснойПрограммы) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РА_КлючиАналитикиУчетаБонуснойПрограммы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.РА_ПодсистемаРасчетаБонусовПартнеров_КлючиАналитикиУчетаБонуснойПрограммы КАК РА_КлючиАналитикиУчетаБонуснойПрограммы
	|ГДЕ
	|	РА_КлючиАналитикиУчетаБонуснойПрограммы.УидБонуснойПрограммы = &УидБонуснойПрограммы";

	Запрос.УстановитьПараметр("УидБонуснойПрограммы", УидБонуснойПрограммы);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КлючОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		КлючОбъект.ПометкаУдаления = Истина;
		КлючОбъект.Записать();
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли